from other.config_reader import start_path
import qrcode
from PIL import ImageDraw, Image, ImageFont


def create_beautiful_code(file_name, logo_text, qr_text):
    logo_img = create_image_with_text(logo_text)
    qr_with_logo_img = create_qr_with_logo(qr_text, logo_img)
    qr_with_logo_img.save(start_path + file_name)


def create_qr_with_logo(qr_code_text, logo_img):
    # Создание QR-кода
    qr = qrcode.QRCode(
        version=5,
        error_correction=qrcode.constants.ERROR_CORRECT_H,
        box_size=5,
        border=1
    )
    qr.add_data(qr_code_text)
    qr.make(fit=True)
    qr_code_img = qr.make_image(fill_color=decode_color('5A89B9')).convert('RGB')

    # Размещение логотипа в центре QR-кода
    pos = ((qr_code_img.size[0] - logo_img.size[0]) // 2 + 5, (qr_code_img.size[1] - logo_img.size[1]) // 2)
    qr_code_img.paste(logo_img, pos)

    return qr_code_img


def create_image_with_text(text, font_path='DejaVuSansMono.ttf', font_size=30, image_size=(200, 50)):
    # Создание пустого изображения
    image = Image.new('RGB', image_size, color='white')
    draw = ImageDraw.Draw(image)

    # Загрузка шрифта
    font = ImageFont.truetype(font_path, font_size)

    # Расчет позиции для размещения текста по центру с использованием textbbox
    textbox = draw.textbbox((0, 0), text, font=font)
    text_width, text_height = textbox[2] - textbox[0], textbox[3] - textbox[1]
    x = (image_size[0] - text_width) / 2
    y = (image_size[1] - text_height) / 2 - 5

    draw.text((x, y), text, font=font, fill=decode_color('C1D9F9'))

    # Размещение рамки
    xy = [0, 0, image_size[0] - 1, image_size[1] - 1]
    draw.rectangle(xy, outline=decode_color('C1D9F9'), width=2)

    return image


def decode_color(color):
    return tuple(int(color[i:i + 2], 16) for i in (0, 2, 4))


if __name__ == '__main__':
    text = 'web+stellar:tx?xdr=AAAAAgAAAADMLnj8ZBUbbnmbRWpT0dC%2Bh9zN%2BeC8hTNsHenb%2BXS8yQAEk%2BADA0ppAAAATgAAAAAAAAABAAAAF01lbWJlcnNoaXAgRGlzdHJpYnV0aW9uAAAAAB4AAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAACDgqvlGozZ8zIZydZzSUz0FKRJ5A0dVWSLnl2bvdbYUAAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAAIOCq%2BUajNnzMhnJ1nNJTPQUpEnkDR1VZIueXZu91thQAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAAAmJaAAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAAg4Kr5RqM2fMyGcnWc0lM9BSkSeQNHVVki55dm73W2FAAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAACyRkU6lVKBEN8jHr%2FOaqJjvHtHE8%2B2DIrJOiGsvX7kVAAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAALJGRTqVUoEQ3yMev85qomO8e0cTz7YMisk6Iay9fuRUAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAAAmJaAAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAAskZFOpVSgRDfIx6%2FzmqiY7x7RxPPtgyKyTohrL1%2B5FQAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAABl4gkFk%2FYhtE1wWHzas61hf0e%2BE8erON8CAIGfLlu18AAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAAGXiCQWT9iG0TXBYfNqzrWF%2FR74Tx6s43wIAgZ8uW7XwAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAAAmJaAAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAAZeIJBZP2IbRNcFh82rOtYX9HvhPHqzjfAgCBny5btfAAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAAChUUjmj7nPQqzZ6CWUoqFIhWgLm1gQIu%2FvxVi03ar3HAAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAAKFRSOaPuc9CrNnoJZSioUiFaAubWBAi7%2B%2FFWLTdqvccAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAABMS0AAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAAoVFI5o%2B5z0Ks2egllKKhSIVoC5tYECLv78VYtN2q9xwAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAAC8G%2BpZrc%2FMUvx1pyBJDO%2FDhrsK6o64j5kD8vW5DFuPZAAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAALwb6lmtz8xS%2FHWnIEkM78OGuwrqjriPmQPy9bkMW49kAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAAAmJaAAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAAvBvqWa3PzFL8dacgSQzvw4a7CuqOuI%2BZA%2FL1uQxbj2QAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAADZuKgrpw7C6r62ByKUnd5kJxXtJli5m%2Bry6eJ64cdS1QAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAANm4qCunDsLqvrYHIpSd3mQnFe0mWLmb6vLp4nrhx1LVAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAAAmJaAAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAA2bioK6cOwuq%2BtgcilJ3eZCcV7SZYuZvq8unieuHHUtUAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAAAAAAAAQAAAADZuKgrpw7C6r62ByKUnd5kJxXtJli5m%2Bry6eJ64cdS1QAAAAAAAAAAATEtAAAAAAEAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAVAAAAABMmEKmPB0eb8wy1Be1Vv5g%2BkWmgLGg3g1%2BubntWOUdzAAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAAAAAABAAAAAAAAAAEAAAAAEyYQqY8HR5vzDLUF7VW%2FmD6RaaAsaDeDX65ue1Y5R3MAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAACYloAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAAATJhCpjwdHm%2FMMtQXtVb%2BYPpFpoCxoN4Nfrm57VjlHcwAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAABAAAAAAAAAAAAAAABAAAAABMmEKmPB0eb8wy1Be1Vv5g%2BkWmgLGg3g1%2BubntWOUdzAAAAAAAAAAABMS0AAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAALUZK9oRXdxNR3dssA2LWWxaN%2BRtkk9q69MftJfgs%2FHQAAAACTVRMQVAAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAAAAAAEAAAAAAAAAAQAAAAAtRkr2hFd3E1Hd2ywDYtZbFo35G2ST2rr0x%2B0l%2BCz8dAAAAAJNVExBUAAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAJiWgAAAAAEAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAVAAAAAC1GSvaEV3cTUd3bLANi1lsWjfkbZJPauvTH7SX4LPx0AAAAAk1UTEFQAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAEAAAAAAAAAAAAAAAEAAAAALUZK9oRXdxNR3dssA2LWWxaN%2BRtkk9q69MftJfgs%2FHQAAAAAAAAAAAExLQAAAAABAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAFQAAAAAE6%2BEwJnDhmHwuXm49i0lhcbCoIcj%2FxZBAyLo6Ou2rqAAAAAJNVExBQwAAAAAAAAAAAAAAm1HlBzX5%2FZSI%2Bi4qAJeieBMJRGHLv1cP6RkvvvqAVgYAAAAAAAAAAQAAAAAAAAABAAAAAATr4TAmcOGYfC5ebj2LSWFxsKghyP%2FFkEDIujo67auoAAAAAk1UTEFDAAAAAAAAAAAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAAAABycOAAAAAAQAAAACbUeUHNfn9lIj6LioAl6J4EwlEYcu%2FVw%2FpGS%2B%2B%2BoBWBgAAABUAAAAABOvhMCZw4Zh8Ll5uPYtJYXGwqCHI%2F8WQQMi6Ojrtq6gAAAACTVRMQUMAAAAAAAAAAAAAAJtR5Qc1%2Bf2UiPouKgCXongTCURhy79XD%2BkZL776gFYGAAAAAQAAAAAAAAAAAAAAAA%3D%3D&callback=url%3Ahttps%3A%2F%2Feurmtl.me%2Fremote%2Fsep07&msg=Membership%20Distribution&origin_domain=eurmtl.me&signature=xY5Z6Seb3%2BikE6UNXJIRyMqhGwMbmdmipjdP0LeFHtBJP9CR883eJhP6BvS0R9bz2oB7qRwkg7qwygudtD%2FQCA%3D%3D'

    while True:
        try:
            create_beautiful_code('/log/1.png', 'text', text)
            print("QR-код успешно создан с длиной текста:", len(text))
            break  # если успешно, выходим из цикла
        except ValueError as e:
            print("Ошибка при создании QR-кода:", e)
            if len(text) <= 10:
                print("Достигнута минимальная длина текста, создание QR-кода невозможно.")
                break
            # сокращаем текст на 10 символов
            text = text[:-3]
